{"ast":null,"code":"var _jsxFileName = \"C:\\\\Hierarchy\\\\HierarchyExample\\\\HirarchyReact\\\\hierarch\\\\src\\\\Tree.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Tree from 'react-d3-tree';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrgChartTree() {\n  _s();\n\n  const [products, setProducts] = useState();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`http://localhost:5198/Hierarchy`).then(response => {\n      return response.json();\n    }).then(actualData => {\n      return setProducts(actualData);\n    }).finally(() => {\n      return setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n  return (\n    /*#__PURE__*/\n    // `<Tree />` will fill width/height of its container; in this case `#treeWrapper`.\n    _jsxDEV(\"div\", {\n      id: \"treeWrapper\",\n      style: {\n        width: '500em',\n        height: '200em',\n        padding: '5em'\n      },\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        data: products,\n        orientation: \"vertical\",\n        initialDepth: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  );\n}\n\n_s(OrgChartTree, \"qabo2U9XCrc9YcyxUbDGPiCHbDc=\");\n\n_c = OrgChartTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrgChartTree\");","map":{"version":3,"names":["React","Tree","useState","useEffect","OrgChartTree","products","setProducts","loading","setLoading","fetch","then","response","json","actualData","finally","width","height","padding"],"sources":["C:/Hierarchy/HierarchyExample/HirarchyReact/hierarch/src/Tree.js"],"sourcesContent":["import React from 'react';\r\nimport Tree from 'react-d3-tree';\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function OrgChartTree() {\r\n    const [products, setProducts] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:5198/Hierarchy`)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((actualData) => {\r\n             return setProducts(actualData);\r\n    })\r\n    .finally(() => {\r\n      return setLoading(false);\r\n  });\r\n       }, []);\r\n\r\n  if(loading){\r\n    return (<div>loading...</div>);\r\n  }\r\n\r\n    return (\r\n      // `<Tree />` will fill width/height of its container; in this case `#treeWrapper`.\r\n      <div id=\"treeWrapper\" style={{ width: '500em', height: '200em' , padding: '5em'}}>\r\n        <Tree data={products} orientation=\"vertical\" initialDepth={0}/>\r\n      </div>\r\n\r\n    );\r\n  }"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,YAAT,GAAwB;EAAA;;EACnC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,EAAxC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;EAEAC,SAAS,CAAC,MAAM;IACZM,KAAK,CAAE,iCAAF,CAAL,CACCC,IADD,CACOC,QAAD,IAAc;MAClB,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACD,CAHD,EAICF,IAJD,CAIOG,UAAD,IAAgB;MACjB,OAAOP,WAAW,CAACO,UAAD,CAAlB;IACR,CANG,EAOHC,OAPG,CAOK,MAAM;MACb,OAAON,UAAU,CAAC,KAAD,CAAjB;IACH,CATK;EAUA,CAXK,EAWH,EAXG,CAAT;;EAaF,IAAGD,OAAH,EAAW;IACT,oBAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAR;EACD;;EAEC;IAAA;IACE;IACA;MAAK,EAAE,EAAC,aAAR;MAAsB,KAAK,EAAE;QAAEQ,KAAK,EAAE,OAAT;QAAkBC,MAAM,EAAE,OAA1B;QAAoCC,OAAO,EAAE;MAA7C,CAA7B;MAAA,uBACE,QAAC,IAAD;QAAM,IAAI,EAAEZ,QAAZ;QAAsB,WAAW,EAAC,UAAlC;QAA6C,YAAY,EAAE;MAA3D;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFF;AAOD;;GA5BqBD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}