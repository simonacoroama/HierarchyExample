{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\n\nvar d3_selection_1 = require(\"d3-selection\");\n\nvar d3_zoom_1 = require(\"d3-zoom\");\n\nvar lite_1 = require(\"dequal/lite\");\n\nvar clone_1 = __importDefault(require(\"clone\"));\n\nvar uuid_1 = require(\"uuid\");\n\nvar TransitionGroupWrapper_1 = __importDefault(require(\"./TransitionGroupWrapper\"));\n\nvar Node_1 = __importDefault(require(\"../Node\"));\n\nvar Link_1 = __importDefault(require(\"../Link\"));\n\nvar globalCss_1 = __importDefault(require(\"../globalCss\"));\n\nvar Tree =\n/** @class */\nfunction (_super) {\n  __extends(Tree, _super);\n\n  function Tree() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      dataRef: _this.props.data,\n      data: Tree.assignInternalProperties(clone_1.default(_this.props.data)),\n      d3: Tree.calculateD3Geometry(_this.props),\n      isTransitioning: false,\n      isInitialRenderForDataset: true\n    };\n    _this.internalState = {\n      targetNode: null,\n      isTransitioning: false\n    };\n    _this.svgInstanceRef = \"rd3t-svg-\" + uuid_1.v4();\n    _this.gInstanceRef = \"rd3t-g-\" + uuid_1.v4();\n    /**\n     * Finds the node matching `nodeId` and\n     * expands/collapses it, depending on the current state of\n     * its internal `collapsed` property.\n     * `setState` callback receives targetNode and handles\n     * `props.onClick` if defined.\n     */\n\n    _this.handleNodeToggle = function (nodeId) {\n      var data = clone_1.default(_this.state.data);\n\n      var matches = _this.findNodesById(nodeId, data, []);\n\n      var targetNodeDatum = matches[0];\n\n      if (_this.props.collapsible && !_this.state.isTransitioning) {\n        if (targetNodeDatum.__rd3t.collapsed) {\n          Tree.expandNode(targetNodeDatum);\n          _this.props.shouldCollapseNeighborNodes && _this.collapseNeighborNodes(targetNodeDatum, data);\n        } else {\n          Tree.collapseNode(targetNodeDatum);\n        }\n\n        if (_this.props.enableLegacyTransitions) {\n          // Lock node toggling while transition takes place.\n          _this.setState({\n            data: data,\n            isTransitioning: true\n          }); // Await transitionDuration + 10 ms before unlocking node toggling again.\n\n\n          setTimeout(function () {\n            return _this.setState({\n              isTransitioning: false\n            });\n          }, _this.props.transitionDuration + 10);\n        } else {\n          _this.setState({\n            data: data\n          });\n        }\n\n        _this.internalState.targetNode = targetNodeDatum;\n      }\n    };\n    /**\n     * Handles the user-defined `onNodeClick` function.\n     */\n\n\n    _this.handleOnNodeClickCb = function (hierarchyPointNode, evt) {\n      var onNodeClick = _this.props.onNodeClick;\n\n      if (onNodeClick && typeof onNodeClick === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onNodeClick(clone_1.default(hierarchyPointNode), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onLinkClick` function.\n     */\n\n\n    _this.handleOnLinkClickCb = function (linkSource, linkTarget, evt) {\n      var onLinkClick = _this.props.onLinkClick;\n\n      if (onLinkClick && typeof onLinkClick === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onLinkClick(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onNodeMouseOver` function.\n     */\n\n\n    _this.handleOnNodeMouseOverCb = function (hierarchyPointNode, evt) {\n      var onNodeMouseOver = _this.props.onNodeMouseOver;\n\n      if (onNodeMouseOver && typeof onNodeMouseOver === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onNodeMouseOver(clone_1.default(hierarchyPointNode), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onLinkMouseOver` function.\n     */\n\n\n    _this.handleOnLinkMouseOverCb = function (linkSource, linkTarget, evt) {\n      var onLinkMouseOver = _this.props.onLinkMouseOver;\n\n      if (onLinkMouseOver && typeof onLinkMouseOver === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onLinkMouseOver(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onNodeMouseOut` function.\n     */\n\n\n    _this.handleOnNodeMouseOutCb = function (hierarchyPointNode, evt) {\n      var onNodeMouseOut = _this.props.onNodeMouseOut;\n\n      if (onNodeMouseOut && typeof onNodeMouseOut === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onNodeMouseOut(clone_1.default(hierarchyPointNode), evt);\n      }\n    };\n    /**\n     * Handles the user-defined `onLinkMouseOut` function.\n     */\n\n\n    _this.handleOnLinkMouseOutCb = function (linkSource, linkTarget, evt) {\n      var onLinkMouseOut = _this.props.onLinkMouseOut;\n\n      if (onLinkMouseOut && typeof onLinkMouseOut === 'function') {\n        // Persist the SyntheticEvent for downstream handling by users.\n        evt.persist();\n        onLinkMouseOut(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n      }\n    };\n    /**\n     * Takes a hierarchy point node and centers the node on the screen\n     * if the dimensions parameter is passed to `Tree`.\n     *\n     * This code is adapted from Rob Schmuecker's centerNode method.\n     * Link: http://bl.ocks.org/robschmuecker/7880033\n     */\n\n\n    _this.centerNode = function (hierarchyPointNode) {\n      var _a = _this.props,\n          dimensions = _a.dimensions,\n          orientation = _a.orientation,\n          zoom = _a.zoom,\n          centeringTransitionDuration = _a.centeringTransitionDuration;\n\n      if (dimensions) {\n        var g = d3_selection_1.select(\".\" + _this.gInstanceRef);\n        var svg = d3_selection_1.select(\".\" + _this.svgInstanceRef);\n        var scale = _this.state.d3.scale;\n        var x = void 0;\n        var y = void 0; // if the orientation is horizontal, calculate the variables inverted (x->y, y->x)\n\n        if (orientation === 'horizontal') {\n          y = -hierarchyPointNode.x * scale + dimensions.height / 2;\n          x = -hierarchyPointNode.y * scale + dimensions.width / 2;\n        } else {\n          // else, calculate the variables normally (x->x, y->y)\n          x = -hierarchyPointNode.x * scale + dimensions.width / 2;\n          y = -hierarchyPointNode.y * scale + dimensions.height / 2;\n        } //@ts-ignore\n\n\n        g.transition().duration(centeringTransitionDuration).attr('transform', 'translate(' + x + ',' + y + ')scale(' + scale + ')'); // Sets the viewport to the new center so that it does not jump back to original\n        // coordinates when dragged/zoomed\n        //@ts-ignore\n\n        svg.call(d3_zoom_1.zoom().transform, d3_zoom_1.zoomIdentity.translate(x, y).scale(zoom));\n      }\n    };\n    /**\n     * Determines which additional `className` prop should be passed to the node & returns it.\n     */\n\n\n    _this.getNodeClassName = function (parent, nodeDatum) {\n      var _a = _this.props,\n          rootNodeClassName = _a.rootNodeClassName,\n          branchNodeClassName = _a.branchNodeClassName,\n          leafNodeClassName = _a.leafNodeClassName;\n      var hasParent = parent !== null && parent !== undefined;\n\n      if (hasParent) {\n        return nodeDatum.children ? branchNodeClassName : leafNodeClassName;\n      } else {\n        return rootNodeClassName;\n      }\n    };\n\n    return _this;\n  }\n\n  Tree.getDerivedStateFromProps = function (nextProps, prevState) {\n    var derivedState = null; // Clone new data & assign internal properties if `data` object reference changed.\n\n    if (nextProps.data !== prevState.dataRef) {\n      derivedState = {\n        dataRef: nextProps.data,\n        data: Tree.assignInternalProperties(clone_1.default(nextProps.data)),\n        isInitialRenderForDataset: true\n      };\n    }\n\n    var d3 = Tree.calculateD3Geometry(nextProps);\n\n    if (!lite_1.dequal(d3, prevState.d3)) {\n      derivedState = derivedState || {};\n      derivedState.d3 = d3;\n    }\n\n    return derivedState;\n  };\n\n  Tree.prototype.componentDidMount = function () {\n    this.bindZoomListener(this.props);\n    this.setState({\n      isInitialRenderForDataset: false\n    });\n  };\n\n  Tree.prototype.componentDidUpdate = function (prevProps) {\n    if (this.props.data !== prevProps.data) {\n      // If last `render` was due to change in dataset -> mark the initial render as done.\n      this.setState({\n        isInitialRenderForDataset: false\n      });\n    }\n\n    if (!lite_1.dequal(this.props.translate, prevProps.translate) || !lite_1.dequal(this.props.scaleExtent, prevProps.scaleExtent) || this.props.zoomable !== prevProps.zoomable || this.props.zoom !== prevProps.zoom || this.props.enableLegacyTransitions !== prevProps.enableLegacyTransitions) {\n      // If zoom-specific props change -> rebind listener with new values.\n      // Or: rebind zoom listeners to new DOM nodes in case legacy transitions were enabled/disabled.\n      this.bindZoomListener(this.props);\n    }\n\n    if (typeof this.props.onUpdate === 'function') {\n      this.props.onUpdate({\n        node: this.internalState.targetNode ? clone_1.default(this.internalState.targetNode) : null,\n        zoom: this.state.d3.scale,\n        translate: this.state.d3.translate\n      });\n    } // Reset the last target node after we've flushed it to `onUpdate`.\n\n\n    this.internalState.targetNode = null;\n  };\n  /**\n   * Collapses all tree nodes with a `depth` larger than `initialDepth`.\n   *\n   * @param {array} nodeSet Array of nodes generated by `generateTree`\n   * @param {number} initialDepth Maximum initial depth the tree should render\n   */\n\n\n  Tree.prototype.setInitialTreeDepth = function (nodeSet, initialDepth) {\n    nodeSet.forEach(function (n) {\n      n.data.__rd3t.collapsed = n.depth >= initialDepth;\n    });\n  };\n  /**\n   * bindZoomListener - If `props.zoomable`, binds a listener for\n   * \"zoom\" events to the SVG and sets scaleExtent to min/max\n   * specified in `props.scaleExtent`.\n   */\n\n\n  Tree.prototype.bindZoomListener = function (props) {\n    var _this = this;\n\n    var zoomable = props.zoomable,\n        scaleExtent = props.scaleExtent,\n        translate = props.translate,\n        zoom = props.zoom,\n        onUpdate = props.onUpdate,\n        hasInteractiveNodes = props.hasInteractiveNodes;\n    var svg = d3_selection_1.select(\".\" + this.svgInstanceRef);\n    var g = d3_selection_1.select(\".\" + this.gInstanceRef); // Sets initial offset, so that first pan and zoom does not jump back to default [0,0] coords.\n    // @ts-ignore\n\n    svg.call(d3_zoom_1.zoom().transform, d3_zoom_1.zoomIdentity.translate(translate.x, translate.y).scale(zoom));\n    svg.call(d3_zoom_1.zoom().scaleExtent(zoomable ? [scaleExtent.min, scaleExtent.max] : [zoom, zoom]) // TODO: break this out into a separate zoom handler fn, rather than inlining it.\n    .filter(function () {\n      if (hasInteractiveNodes) return d3_selection_1.event.target.classList.contains(_this.svgInstanceRef) || d3_selection_1.event.target.classList.contains(_this.gInstanceRef) || d3_selection_1.event.shiftKey;\n      return true;\n    }).on('zoom', function () {\n      g.attr('transform', d3_selection_1.event.transform);\n\n      if (typeof onUpdate === 'function') {\n        // This callback is magically called not only on \"zoom\", but on \"drag\", as well,\n        // even though event.type == \"zoom\".\n        // Taking advantage of this and not writing a \"drag\" handler.\n        onUpdate({\n          node: null,\n          zoom: d3_selection_1.event.transform.k,\n          translate: {\n            x: d3_selection_1.event.transform.x,\n            y: d3_selection_1.event.transform.y\n          }\n        }); // TODO: remove this? Shouldn't be mutating state keys directly.\n\n        _this.state.d3.scale = d3_selection_1.event.transform.k;\n        _this.state.d3.translate = {\n          x: d3_selection_1.event.transform.x,\n          y: d3_selection_1.event.transform.y\n        };\n      }\n    }));\n  };\n  /**\n   * Assigns internal properties that are required for tree\n   * manipulation to each node in the `data` set and returns a new `data` array.\n   *\n   * @static\n   */\n\n\n  Tree.assignInternalProperties = function (data, currentDepth) {\n    if (currentDepth === void 0) {\n      currentDepth = 0;\n    } // Wrap the root node into an array for recursive transformations if it wasn't in one already.\n\n\n    var d = Array.isArray(data) ? data : [data];\n    return d.map(function (n) {\n      var nodeDatum = n;\n      nodeDatum.__rd3t = {\n        id: null,\n        depth: null,\n        collapsed: false\n      };\n      nodeDatum.__rd3t.id = uuid_1.v4(); // D3@v5 compat: manually assign `depth` to node.data so we don't have\n      // to hold full node+link sets in state.\n      // TODO: avoid this extra step by checking D3's node.depth directly.\n\n      nodeDatum.__rd3t.depth = currentDepth; // If there are children, recursively assign properties to them too.\n\n      if (nodeDatum.children && nodeDatum.children.length > 0) {\n        nodeDatum.children = Tree.assignInternalProperties(nodeDatum.children, currentDepth + 1);\n      }\n\n      return nodeDatum;\n    });\n  };\n  /**\n   * Recursively walks the nested `nodeSet` until a node matching `nodeId` is found.\n   */\n\n\n  Tree.prototype.findNodesById = function (nodeId, nodeSet, hits) {\n    var _this = this;\n\n    if (hits.length > 0) {\n      return hits;\n    }\n\n    hits = hits.concat(nodeSet.filter(function (node) {\n      return node.__rd3t.id === nodeId;\n    }));\n    nodeSet.forEach(function (node) {\n      if (node.children && node.children.length > 0) {\n        hits = _this.findNodesById(nodeId, node.children, hits);\n      }\n    });\n    return hits;\n  };\n  /**\n   * Recursively walks the nested `nodeSet` until all nodes at `depth` have been found.\n   *\n   * @param {number} depth Target depth for which nodes should be returned\n   * @param {array} nodeSet Array of nested `node` objects\n   * @param {array} accumulator Accumulator for matches, passed between recursive calls\n   */\n\n\n  Tree.prototype.findNodesAtDepth = function (depth, nodeSet, accumulator) {\n    var _this = this;\n\n    accumulator = accumulator.concat(nodeSet.filter(function (node) {\n      return node.__rd3t.depth === depth;\n    }));\n    nodeSet.forEach(function (node) {\n      if (node.children && node.children.length > 0) {\n        accumulator = _this.findNodesAtDepth(depth, node.children, accumulator);\n      }\n    });\n    return accumulator;\n  };\n  /**\n   * Recursively sets the internal `collapsed` property of\n   * the passed `TreeNodeDatum` and its children to `true`.\n   *\n   * @static\n   */\n\n\n  Tree.collapseNode = function (nodeDatum) {\n    nodeDatum.__rd3t.collapsed = true;\n\n    if (nodeDatum.children && nodeDatum.children.length > 0) {\n      nodeDatum.children.forEach(function (child) {\n        Tree.collapseNode(child);\n      });\n    }\n  };\n  /**\n   * Sets the internal `collapsed` property of\n   * the passed `TreeNodeDatum` object to `false`.\n   *\n   * @static\n   */\n\n\n  Tree.expandNode = function (nodeDatum) {\n    nodeDatum.__rd3t.collapsed = false;\n  };\n  /**\n   * Collapses all nodes in `nodeSet` that are neighbors (same depth) of `targetNode`.\n   */\n\n\n  Tree.prototype.collapseNeighborNodes = function (targetNode, nodeSet) {\n    var neighbors = this.findNodesAtDepth(targetNode.__rd3t.depth, nodeSet, []).filter(function (node) {\n      return node.__rd3t.id !== targetNode.__rd3t.id;\n    });\n    neighbors.forEach(function (neighbor) {\n      return Tree.collapseNode(neighbor);\n    });\n  };\n  /**\n   * Generates tree elements (`nodes` and `links`) by\n   * grabbing the rootNode from `this.state.data[0]`.\n   * Restricts tree depth to `props.initialDepth` if defined and if this is\n   * the initial render of the tree.\n   */\n\n\n  Tree.prototype.generateTree = function () {\n    var _a = this.props,\n        initialDepth = _a.initialDepth,\n        depthFactor = _a.depthFactor,\n        separation = _a.separation,\n        nodeSize = _a.nodeSize,\n        orientation = _a.orientation;\n    var isInitialRenderForDataset = this.state.isInitialRenderForDataset;\n    var tree = d3_hierarchy_1.tree().nodeSize(orientation === 'horizontal' ? [nodeSize.y, nodeSize.x] : [nodeSize.x, nodeSize.y]).separation(function (a, b) {\n      return a.parent.data.__rd3t.id === b.parent.data.__rd3t.id ? separation.siblings : separation.nonSiblings;\n    });\n    var rootNode = tree(d3_hierarchy_1.hierarchy(this.state.data[0], function (d) {\n      return d.__rd3t.collapsed ? null : d.children;\n    }));\n    var nodes = rootNode.descendants();\n    var links = rootNode.links(); // Configure nodes' `collapsed` property on first render if `initialDepth` is defined.\n\n    if (initialDepth !== undefined && isInitialRenderForDataset) {\n      this.setInitialTreeDepth(nodes, initialDepth);\n    }\n\n    if (depthFactor) {\n      nodes.forEach(function (node) {\n        node.y = node.depth * depthFactor;\n      });\n    }\n\n    return {\n      nodes: nodes,\n      links: links\n    };\n  };\n  /**\n   * Set initial zoom and position.\n   * Also limit zoom level according to `scaleExtent` on initial display. This is necessary,\n   * because the first time we are setting it as an SVG property, instead of going\n   * through D3's scaling mechanism, which would have picked up both properties.\n   *\n   * @static\n   */\n\n\n  Tree.calculateD3Geometry = function (nextProps) {\n    var scale;\n\n    if (nextProps.zoom > nextProps.scaleExtent.max) {\n      scale = nextProps.scaleExtent.max;\n    } else if (nextProps.zoom < nextProps.scaleExtent.min) {\n      scale = nextProps.scaleExtent.min;\n    } else {\n      scale = nextProps.zoom;\n    }\n\n    return {\n      translate: nextProps.translate,\n      scale: scale\n    };\n  };\n\n  Tree.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.generateTree(),\n        nodes = _a.nodes,\n        links = _a.links;\n\n    var _b = this.props,\n        renderCustomNodeElement = _b.renderCustomNodeElement,\n        orientation = _b.orientation,\n        pathFunc = _b.pathFunc,\n        transitionDuration = _b.transitionDuration,\n        nodeSize = _b.nodeSize,\n        depthFactor = _b.depthFactor,\n        initialDepth = _b.initialDepth,\n        separation = _b.separation,\n        enableLegacyTransitions = _b.enableLegacyTransitions,\n        svgClassName = _b.svgClassName,\n        pathClassFunc = _b.pathClassFunc;\n    var _c = this.state.d3,\n        translate = _c.translate,\n        scale = _c.scale;\n\n    var subscriptions = __assign(__assign(__assign({}, nodeSize), separation), {\n      depthFactor: depthFactor,\n      initialDepth: initialDepth\n    });\n\n    return react_1.default.createElement(\"div\", {\n      className: \"rd3t-tree-container rd3t-grabbable\"\n    }, react_1.default.createElement(\"style\", null, globalCss_1.default), react_1.default.createElement(\"svg\", {\n      className: \"rd3t-svg \" + this.svgInstanceRef + \" \" + svgClassName,\n      width: \"100%\",\n      height: \"100%\"\n    }, react_1.default.createElement(TransitionGroupWrapper_1.default, {\n      enableLegacyTransitions: enableLegacyTransitions,\n      component: \"g\",\n      className: \"rd3t-g \" + this.gInstanceRef,\n      transform: \"translate(\" + translate.x + \",\" + translate.y + \") scale(\" + scale + \")\"\n    }, links.map(function (linkData, i) {\n      return react_1.default.createElement(Link_1.default, {\n        key: 'link-' + i,\n        orientation: orientation,\n        pathFunc: pathFunc,\n        pathClassFunc: pathClassFunc,\n        linkData: linkData,\n        onClick: _this.handleOnLinkClickCb,\n        onMouseOver: _this.handleOnLinkMouseOverCb,\n        onMouseOut: _this.handleOnLinkMouseOutCb,\n        enableLegacyTransitions: enableLegacyTransitions,\n        transitionDuration: transitionDuration\n      });\n    }), nodes.map(function (hierarchyPointNode, i) {\n      var data = hierarchyPointNode.data,\n          x = hierarchyPointNode.x,\n          y = hierarchyPointNode.y,\n          parent = hierarchyPointNode.parent;\n      return react_1.default.createElement(Node_1.default, {\n        key: 'node-' + i,\n        data: data,\n        position: {\n          x: x,\n          y: y\n        },\n        hierarchyPointNode: hierarchyPointNode,\n        parent: parent,\n        nodeClassName: _this.getNodeClassName(parent, data),\n        renderCustomNodeElement: renderCustomNodeElement,\n        nodeSize: nodeSize,\n        orientation: orientation,\n        enableLegacyTransitions: enableLegacyTransitions,\n        transitionDuration: transitionDuration,\n        onNodeToggle: _this.handleNodeToggle,\n        onNodeClick: _this.handleOnNodeClickCb,\n        onNodeMouseOver: _this.handleOnNodeMouseOverCb,\n        onNodeMouseOut: _this.handleOnNodeMouseOutCb,\n        subscriptions: subscriptions,\n        centerNode: _this.centerNode\n      });\n    }))));\n  };\n\n  Tree.defaultProps = {\n    onNodeClick: undefined,\n    onNodeMouseOver: undefined,\n    onNodeMouseOut: undefined,\n    onLinkClick: undefined,\n    onLinkMouseOver: undefined,\n    onLinkMouseOut: undefined,\n    onUpdate: undefined,\n    orientation: 'horizontal',\n    translate: {\n      x: 0,\n      y: 0\n    },\n    pathFunc: 'diagonal',\n    pathClassFunc: undefined,\n    transitionDuration: 500,\n    depthFactor: undefined,\n    collapsible: true,\n    initialDepth: undefined,\n    zoomable: true,\n    zoom: 1,\n    scaleExtent: {\n      min: 0.1,\n      max: 1\n    },\n    nodeSize: {\n      x: 140,\n      y: 140\n    },\n    separation: {\n      siblings: 1,\n      nonSiblings: 2\n    },\n    shouldCollapseNeighborNodes: false,\n    svgClassName: '',\n    rootNodeClassName: '',\n    branchNodeClassName: '',\n    leafNodeClassName: '',\n    renderCustomNodeElement: undefined,\n    enableLegacyTransitions: false,\n    hasInteractiveNodes: false,\n    dimensions: undefined,\n    centeringTransitionDuration: 800\n  };\n  return Tree;\n}(react_1.default.Component);\n\nexports.default = Tree;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__importDefault","mod","__esModule","defineProperty","exports","value","react_1","require","d3_hierarchy_1","d3_selection_1","d3_zoom_1","lite_1","clone_1","uuid_1","TransitionGroupWrapper_1","Node_1","Link_1","globalCss_1","Tree","_super","_this","state","dataRef","props","data","assignInternalProperties","default","d3","calculateD3Geometry","isTransitioning","isInitialRenderForDataset","internalState","targetNode","svgInstanceRef","v4","gInstanceRef","handleNodeToggle","nodeId","matches","findNodesById","targetNodeDatum","collapsible","__rd3t","collapsed","expandNode","shouldCollapseNeighborNodes","collapseNeighborNodes","collapseNode","enableLegacyTransitions","setState","setTimeout","transitionDuration","handleOnNodeClickCb","hierarchyPointNode","evt","onNodeClick","persist","handleOnLinkClickCb","linkSource","linkTarget","onLinkClick","handleOnNodeMouseOverCb","onNodeMouseOver","handleOnLinkMouseOverCb","onLinkMouseOver","handleOnNodeMouseOutCb","onNodeMouseOut","handleOnLinkMouseOutCb","onLinkMouseOut","centerNode","_a","dimensions","orientation","zoom","centeringTransitionDuration","g","select","svg","scale","x","y","height","width","transition","duration","attr","transform","zoomIdentity","translate","getNodeClassName","parent","nodeDatum","rootNodeClassName","branchNodeClassName","leafNodeClassName","hasParent","undefined","children","getDerivedStateFromProps","nextProps","prevState","derivedState","dequal","componentDidMount","bindZoomListener","componentDidUpdate","prevProps","scaleExtent","zoomable","onUpdate","node","setInitialTreeDepth","nodeSet","initialDepth","forEach","depth","hasInteractiveNodes","min","max","filter","event","target","classList","contains","shiftKey","on","k","currentDepth","isArray","map","id","hits","concat","findNodesAtDepth","accumulator","child","neighbors","neighbor","generateTree","depthFactor","separation","nodeSize","tree","a","siblings","nonSiblings","rootNode","hierarchy","nodes","descendants","links","render","_b","renderCustomNodeElement","pathFunc","svgClassName","pathClassFunc","_c","subscriptions","createElement","className","component","linkData","key","onClick","onMouseOver","onMouseOut","position","nodeClassName","onNodeToggle","defaultProps","Component"],"sources":["C:/Hierarchy/HierarchyExample/HirarchyReact/hierarch/node_modules/react-d3-tree/lib/Tree/index.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importDefault(require(\"react\"));\nvar d3_hierarchy_1 = require(\"d3-hierarchy\");\nvar d3_selection_1 = require(\"d3-selection\");\nvar d3_zoom_1 = require(\"d3-zoom\");\nvar lite_1 = require(\"dequal/lite\");\nvar clone_1 = __importDefault(require(\"clone\"));\nvar uuid_1 = require(\"uuid\");\nvar TransitionGroupWrapper_1 = __importDefault(require(\"./TransitionGroupWrapper\"));\nvar Node_1 = __importDefault(require(\"../Node\"));\nvar Link_1 = __importDefault(require(\"../Link\"));\nvar globalCss_1 = __importDefault(require(\"../globalCss\"));\nvar Tree = /** @class */ (function (_super) {\n    __extends(Tree, _super);\n    function Tree() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            dataRef: _this.props.data,\n            data: Tree.assignInternalProperties(clone_1.default(_this.props.data)),\n            d3: Tree.calculateD3Geometry(_this.props),\n            isTransitioning: false,\n            isInitialRenderForDataset: true,\n        };\n        _this.internalState = {\n            targetNode: null,\n            isTransitioning: false,\n        };\n        _this.svgInstanceRef = \"rd3t-svg-\" + uuid_1.v4();\n        _this.gInstanceRef = \"rd3t-g-\" + uuid_1.v4();\n        /**\n         * Finds the node matching `nodeId` and\n         * expands/collapses it, depending on the current state of\n         * its internal `collapsed` property.\n         * `setState` callback receives targetNode and handles\n         * `props.onClick` if defined.\n         */\n        _this.handleNodeToggle = function (nodeId) {\n            var data = clone_1.default(_this.state.data);\n            var matches = _this.findNodesById(nodeId, data, []);\n            var targetNodeDatum = matches[0];\n            if (_this.props.collapsible && !_this.state.isTransitioning) {\n                if (targetNodeDatum.__rd3t.collapsed) {\n                    Tree.expandNode(targetNodeDatum);\n                    _this.props.shouldCollapseNeighborNodes && _this.collapseNeighborNodes(targetNodeDatum, data);\n                }\n                else {\n                    Tree.collapseNode(targetNodeDatum);\n                }\n                if (_this.props.enableLegacyTransitions) {\n                    // Lock node toggling while transition takes place.\n                    _this.setState({ data: data, isTransitioning: true });\n                    // Await transitionDuration + 10 ms before unlocking node toggling again.\n                    setTimeout(function () { return _this.setState({ isTransitioning: false }); }, _this.props.transitionDuration + 10);\n                }\n                else {\n                    _this.setState({ data: data });\n                }\n                _this.internalState.targetNode = targetNodeDatum;\n            }\n        };\n        /**\n         * Handles the user-defined `onNodeClick` function.\n         */\n        _this.handleOnNodeClickCb = function (hierarchyPointNode, evt) {\n            var onNodeClick = _this.props.onNodeClick;\n            if (onNodeClick && typeof onNodeClick === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onNodeClick(clone_1.default(hierarchyPointNode), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onLinkClick` function.\n         */\n        _this.handleOnLinkClickCb = function (linkSource, linkTarget, evt) {\n            var onLinkClick = _this.props.onLinkClick;\n            if (onLinkClick && typeof onLinkClick === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onLinkClick(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onNodeMouseOver` function.\n         */\n        _this.handleOnNodeMouseOverCb = function (hierarchyPointNode, evt) {\n            var onNodeMouseOver = _this.props.onNodeMouseOver;\n            if (onNodeMouseOver && typeof onNodeMouseOver === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onNodeMouseOver(clone_1.default(hierarchyPointNode), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onLinkMouseOver` function.\n         */\n        _this.handleOnLinkMouseOverCb = function (linkSource, linkTarget, evt) {\n            var onLinkMouseOver = _this.props.onLinkMouseOver;\n            if (onLinkMouseOver && typeof onLinkMouseOver === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onLinkMouseOver(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onNodeMouseOut` function.\n         */\n        _this.handleOnNodeMouseOutCb = function (hierarchyPointNode, evt) {\n            var onNodeMouseOut = _this.props.onNodeMouseOut;\n            if (onNodeMouseOut && typeof onNodeMouseOut === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onNodeMouseOut(clone_1.default(hierarchyPointNode), evt);\n            }\n        };\n        /**\n         * Handles the user-defined `onLinkMouseOut` function.\n         */\n        _this.handleOnLinkMouseOutCb = function (linkSource, linkTarget, evt) {\n            var onLinkMouseOut = _this.props.onLinkMouseOut;\n            if (onLinkMouseOut && typeof onLinkMouseOut === 'function') {\n                // Persist the SyntheticEvent for downstream handling by users.\n                evt.persist();\n                onLinkMouseOut(clone_1.default(linkSource), clone_1.default(linkTarget), evt);\n            }\n        };\n        /**\n         * Takes a hierarchy point node and centers the node on the screen\n         * if the dimensions parameter is passed to `Tree`.\n         *\n         * This code is adapted from Rob Schmuecker's centerNode method.\n         * Link: http://bl.ocks.org/robschmuecker/7880033\n         */\n        _this.centerNode = function (hierarchyPointNode) {\n            var _a = _this.props, dimensions = _a.dimensions, orientation = _a.orientation, zoom = _a.zoom, centeringTransitionDuration = _a.centeringTransitionDuration;\n            if (dimensions) {\n                var g = d3_selection_1.select(\".\" + _this.gInstanceRef);\n                var svg = d3_selection_1.select(\".\" + _this.svgInstanceRef);\n                var scale = _this.state.d3.scale;\n                var x = void 0;\n                var y = void 0;\n                // if the orientation is horizontal, calculate the variables inverted (x->y, y->x)\n                if (orientation === 'horizontal') {\n                    y = -hierarchyPointNode.x * scale + dimensions.height / 2;\n                    x = -hierarchyPointNode.y * scale + dimensions.width / 2;\n                }\n                else {\n                    // else, calculate the variables normally (x->x, y->y)\n                    x = -hierarchyPointNode.x * scale + dimensions.width / 2;\n                    y = -hierarchyPointNode.y * scale + dimensions.height / 2;\n                }\n                //@ts-ignore\n                g.transition()\n                    .duration(centeringTransitionDuration)\n                    .attr('transform', 'translate(' + x + ',' + y + ')scale(' + scale + ')');\n                // Sets the viewport to the new center so that it does not jump back to original\n                // coordinates when dragged/zoomed\n                //@ts-ignore\n                svg.call(d3_zoom_1.zoom().transform, d3_zoom_1.zoomIdentity.translate(x, y).scale(zoom));\n            }\n        };\n        /**\n         * Determines which additional `className` prop should be passed to the node & returns it.\n         */\n        _this.getNodeClassName = function (parent, nodeDatum) {\n            var _a = _this.props, rootNodeClassName = _a.rootNodeClassName, branchNodeClassName = _a.branchNodeClassName, leafNodeClassName = _a.leafNodeClassName;\n            var hasParent = parent !== null && parent !== undefined;\n            if (hasParent) {\n                return nodeDatum.children ? branchNodeClassName : leafNodeClassName;\n            }\n            else {\n                return rootNodeClassName;\n            }\n        };\n        return _this;\n    }\n    Tree.getDerivedStateFromProps = function (nextProps, prevState) {\n        var derivedState = null;\n        // Clone new data & assign internal properties if `data` object reference changed.\n        if (nextProps.data !== prevState.dataRef) {\n            derivedState = {\n                dataRef: nextProps.data,\n                data: Tree.assignInternalProperties(clone_1.default(nextProps.data)),\n                isInitialRenderForDataset: true,\n            };\n        }\n        var d3 = Tree.calculateD3Geometry(nextProps);\n        if (!lite_1.dequal(d3, prevState.d3)) {\n            derivedState = derivedState || {};\n            derivedState.d3 = d3;\n        }\n        return derivedState;\n    };\n    Tree.prototype.componentDidMount = function () {\n        this.bindZoomListener(this.props);\n        this.setState({ isInitialRenderForDataset: false });\n    };\n    Tree.prototype.componentDidUpdate = function (prevProps) {\n        if (this.props.data !== prevProps.data) {\n            // If last `render` was due to change in dataset -> mark the initial render as done.\n            this.setState({ isInitialRenderForDataset: false });\n        }\n        if (!lite_1.dequal(this.props.translate, prevProps.translate) ||\n            !lite_1.dequal(this.props.scaleExtent, prevProps.scaleExtent) ||\n            this.props.zoomable !== prevProps.zoomable ||\n            this.props.zoom !== prevProps.zoom ||\n            this.props.enableLegacyTransitions !== prevProps.enableLegacyTransitions) {\n            // If zoom-specific props change -> rebind listener with new values.\n            // Or: rebind zoom listeners to new DOM nodes in case legacy transitions were enabled/disabled.\n            this.bindZoomListener(this.props);\n        }\n        if (typeof this.props.onUpdate === 'function') {\n            this.props.onUpdate({\n                node: this.internalState.targetNode ? clone_1.default(this.internalState.targetNode) : null,\n                zoom: this.state.d3.scale,\n                translate: this.state.d3.translate,\n            });\n        }\n        // Reset the last target node after we've flushed it to `onUpdate`.\n        this.internalState.targetNode = null;\n    };\n    /**\n     * Collapses all tree nodes with a `depth` larger than `initialDepth`.\n     *\n     * @param {array} nodeSet Array of nodes generated by `generateTree`\n     * @param {number} initialDepth Maximum initial depth the tree should render\n     */\n    Tree.prototype.setInitialTreeDepth = function (nodeSet, initialDepth) {\n        nodeSet.forEach(function (n) {\n            n.data.__rd3t.collapsed = n.depth >= initialDepth;\n        });\n    };\n    /**\n     * bindZoomListener - If `props.zoomable`, binds a listener for\n     * \"zoom\" events to the SVG and sets scaleExtent to min/max\n     * specified in `props.scaleExtent`.\n     */\n    Tree.prototype.bindZoomListener = function (props) {\n        var _this = this;\n        var zoomable = props.zoomable, scaleExtent = props.scaleExtent, translate = props.translate, zoom = props.zoom, onUpdate = props.onUpdate, hasInteractiveNodes = props.hasInteractiveNodes;\n        var svg = d3_selection_1.select(\".\" + this.svgInstanceRef);\n        var g = d3_selection_1.select(\".\" + this.gInstanceRef);\n        // Sets initial offset, so that first pan and zoom does not jump back to default [0,0] coords.\n        // @ts-ignore\n        svg.call(d3_zoom_1.zoom().transform, d3_zoom_1.zoomIdentity.translate(translate.x, translate.y).scale(zoom));\n        svg.call(d3_zoom_1.zoom()\n            .scaleExtent(zoomable ? [scaleExtent.min, scaleExtent.max] : [zoom, zoom])\n            // TODO: break this out into a separate zoom handler fn, rather than inlining it.\n            .filter(function () {\n            if (hasInteractiveNodes)\n                return (d3_selection_1.event.target.classList.contains(_this.svgInstanceRef) ||\n                    d3_selection_1.event.target.classList.contains(_this.gInstanceRef) ||\n                    d3_selection_1.event.shiftKey);\n            return true;\n        })\n            .on('zoom', function () {\n            g.attr('transform', d3_selection_1.event.transform);\n            if (typeof onUpdate === 'function') {\n                // This callback is magically called not only on \"zoom\", but on \"drag\", as well,\n                // even though event.type == \"zoom\".\n                // Taking advantage of this and not writing a \"drag\" handler.\n                onUpdate({\n                    node: null,\n                    zoom: d3_selection_1.event.transform.k,\n                    translate: { x: d3_selection_1.event.transform.x, y: d3_selection_1.event.transform.y },\n                });\n                // TODO: remove this? Shouldn't be mutating state keys directly.\n                _this.state.d3.scale = d3_selection_1.event.transform.k;\n                _this.state.d3.translate = {\n                    x: d3_selection_1.event.transform.x,\n                    y: d3_selection_1.event.transform.y,\n                };\n            }\n        }));\n    };\n    /**\n     * Assigns internal properties that are required for tree\n     * manipulation to each node in the `data` set and returns a new `data` array.\n     *\n     * @static\n     */\n    Tree.assignInternalProperties = function (data, currentDepth) {\n        if (currentDepth === void 0) { currentDepth = 0; }\n        // Wrap the root node into an array for recursive transformations if it wasn't in one already.\n        var d = Array.isArray(data) ? data : [data];\n        return d.map(function (n) {\n            var nodeDatum = n;\n            nodeDatum.__rd3t = { id: null, depth: null, collapsed: false };\n            nodeDatum.__rd3t.id = uuid_1.v4();\n            // D3@v5 compat: manually assign `depth` to node.data so we don't have\n            // to hold full node+link sets in state.\n            // TODO: avoid this extra step by checking D3's node.depth directly.\n            nodeDatum.__rd3t.depth = currentDepth;\n            // If there are children, recursively assign properties to them too.\n            if (nodeDatum.children && nodeDatum.children.length > 0) {\n                nodeDatum.children = Tree.assignInternalProperties(nodeDatum.children, currentDepth + 1);\n            }\n            return nodeDatum;\n        });\n    };\n    /**\n     * Recursively walks the nested `nodeSet` until a node matching `nodeId` is found.\n     */\n    Tree.prototype.findNodesById = function (nodeId, nodeSet, hits) {\n        var _this = this;\n        if (hits.length > 0) {\n            return hits;\n        }\n        hits = hits.concat(nodeSet.filter(function (node) { return node.__rd3t.id === nodeId; }));\n        nodeSet.forEach(function (node) {\n            if (node.children && node.children.length > 0) {\n                hits = _this.findNodesById(nodeId, node.children, hits);\n            }\n        });\n        return hits;\n    };\n    /**\n     * Recursively walks the nested `nodeSet` until all nodes at `depth` have been found.\n     *\n     * @param {number} depth Target depth for which nodes should be returned\n     * @param {array} nodeSet Array of nested `node` objects\n     * @param {array} accumulator Accumulator for matches, passed between recursive calls\n     */\n    Tree.prototype.findNodesAtDepth = function (depth, nodeSet, accumulator) {\n        var _this = this;\n        accumulator = accumulator.concat(nodeSet.filter(function (node) { return node.__rd3t.depth === depth; }));\n        nodeSet.forEach(function (node) {\n            if (node.children && node.children.length > 0) {\n                accumulator = _this.findNodesAtDepth(depth, node.children, accumulator);\n            }\n        });\n        return accumulator;\n    };\n    /**\n     * Recursively sets the internal `collapsed` property of\n     * the passed `TreeNodeDatum` and its children to `true`.\n     *\n     * @static\n     */\n    Tree.collapseNode = function (nodeDatum) {\n        nodeDatum.__rd3t.collapsed = true;\n        if (nodeDatum.children && nodeDatum.children.length > 0) {\n            nodeDatum.children.forEach(function (child) {\n                Tree.collapseNode(child);\n            });\n        }\n    };\n    /**\n     * Sets the internal `collapsed` property of\n     * the passed `TreeNodeDatum` object to `false`.\n     *\n     * @static\n     */\n    Tree.expandNode = function (nodeDatum) {\n        nodeDatum.__rd3t.collapsed = false;\n    };\n    /**\n     * Collapses all nodes in `nodeSet` that are neighbors (same depth) of `targetNode`.\n     */\n    Tree.prototype.collapseNeighborNodes = function (targetNode, nodeSet) {\n        var neighbors = this.findNodesAtDepth(targetNode.__rd3t.depth, nodeSet, []).filter(function (node) { return node.__rd3t.id !== targetNode.__rd3t.id; });\n        neighbors.forEach(function (neighbor) { return Tree.collapseNode(neighbor); });\n    };\n    /**\n     * Generates tree elements (`nodes` and `links`) by\n     * grabbing the rootNode from `this.state.data[0]`.\n     * Restricts tree depth to `props.initialDepth` if defined and if this is\n     * the initial render of the tree.\n     */\n    Tree.prototype.generateTree = function () {\n        var _a = this.props, initialDepth = _a.initialDepth, depthFactor = _a.depthFactor, separation = _a.separation, nodeSize = _a.nodeSize, orientation = _a.orientation;\n        var isInitialRenderForDataset = this.state.isInitialRenderForDataset;\n        var tree = d3_hierarchy_1.tree()\n            .nodeSize(orientation === 'horizontal' ? [nodeSize.y, nodeSize.x] : [nodeSize.x, nodeSize.y])\n            .separation(function (a, b) {\n            return a.parent.data.__rd3t.id === b.parent.data.__rd3t.id\n                ? separation.siblings\n                : separation.nonSiblings;\n        });\n        var rootNode = tree(d3_hierarchy_1.hierarchy(this.state.data[0], function (d) { return (d.__rd3t.collapsed ? null : d.children); }));\n        var nodes = rootNode.descendants();\n        var links = rootNode.links();\n        // Configure nodes' `collapsed` property on first render if `initialDepth` is defined.\n        if (initialDepth !== undefined && isInitialRenderForDataset) {\n            this.setInitialTreeDepth(nodes, initialDepth);\n        }\n        if (depthFactor) {\n            nodes.forEach(function (node) {\n                node.y = node.depth * depthFactor;\n            });\n        }\n        return { nodes: nodes, links: links };\n    };\n    /**\n     * Set initial zoom and position.\n     * Also limit zoom level according to `scaleExtent` on initial display. This is necessary,\n     * because the first time we are setting it as an SVG property, instead of going\n     * through D3's scaling mechanism, which would have picked up both properties.\n     *\n     * @static\n     */\n    Tree.calculateD3Geometry = function (nextProps) {\n        var scale;\n        if (nextProps.zoom > nextProps.scaleExtent.max) {\n            scale = nextProps.scaleExtent.max;\n        }\n        else if (nextProps.zoom < nextProps.scaleExtent.min) {\n            scale = nextProps.scaleExtent.min;\n        }\n        else {\n            scale = nextProps.zoom;\n        }\n        return {\n            translate: nextProps.translate,\n            scale: scale,\n        };\n    };\n    Tree.prototype.render = function () {\n        var _this = this;\n        var _a = this.generateTree(), nodes = _a.nodes, links = _a.links;\n        var _b = this.props, renderCustomNodeElement = _b.renderCustomNodeElement, orientation = _b.orientation, pathFunc = _b.pathFunc, transitionDuration = _b.transitionDuration, nodeSize = _b.nodeSize, depthFactor = _b.depthFactor, initialDepth = _b.initialDepth, separation = _b.separation, enableLegacyTransitions = _b.enableLegacyTransitions, svgClassName = _b.svgClassName, pathClassFunc = _b.pathClassFunc;\n        var _c = this.state.d3, translate = _c.translate, scale = _c.scale;\n        var subscriptions = __assign(__assign(__assign({}, nodeSize), separation), { depthFactor: depthFactor,\n            initialDepth: initialDepth });\n        return (react_1.default.createElement(\"div\", { className: \"rd3t-tree-container rd3t-grabbable\" },\n            react_1.default.createElement(\"style\", null, globalCss_1.default),\n            react_1.default.createElement(\"svg\", { className: \"rd3t-svg \" + this.svgInstanceRef + \" \" + svgClassName, width: \"100%\", height: \"100%\" },\n                react_1.default.createElement(TransitionGroupWrapper_1.default, { enableLegacyTransitions: enableLegacyTransitions, component: \"g\", className: \"rd3t-g \" + this.gInstanceRef, transform: \"translate(\" + translate.x + \",\" + translate.y + \") scale(\" + scale + \")\" },\n                    links.map(function (linkData, i) {\n                        return (react_1.default.createElement(Link_1.default, { key: 'link-' + i, orientation: orientation, pathFunc: pathFunc, pathClassFunc: pathClassFunc, linkData: linkData, onClick: _this.handleOnLinkClickCb, onMouseOver: _this.handleOnLinkMouseOverCb, onMouseOut: _this.handleOnLinkMouseOutCb, enableLegacyTransitions: enableLegacyTransitions, transitionDuration: transitionDuration }));\n                    }),\n                    nodes.map(function (hierarchyPointNode, i) {\n                        var data = hierarchyPointNode.data, x = hierarchyPointNode.x, y = hierarchyPointNode.y, parent = hierarchyPointNode.parent;\n                        return (react_1.default.createElement(Node_1.default, { key: 'node-' + i, data: data, position: { x: x, y: y }, hierarchyPointNode: hierarchyPointNode, parent: parent, nodeClassName: _this.getNodeClassName(parent, data), renderCustomNodeElement: renderCustomNodeElement, nodeSize: nodeSize, orientation: orientation, enableLegacyTransitions: enableLegacyTransitions, transitionDuration: transitionDuration, onNodeToggle: _this.handleNodeToggle, onNodeClick: _this.handleOnNodeClickCb, onNodeMouseOver: _this.handleOnNodeMouseOverCb, onNodeMouseOut: _this.handleOnNodeMouseOutCb, subscriptions: subscriptions, centerNode: _this.centerNode }));\n                    })))));\n    };\n    Tree.defaultProps = {\n        onNodeClick: undefined,\n        onNodeMouseOver: undefined,\n        onNodeMouseOut: undefined,\n        onLinkClick: undefined,\n        onLinkMouseOver: undefined,\n        onLinkMouseOut: undefined,\n        onUpdate: undefined,\n        orientation: 'horizontal',\n        translate: { x: 0, y: 0 },\n        pathFunc: 'diagonal',\n        pathClassFunc: undefined,\n        transitionDuration: 500,\n        depthFactor: undefined,\n        collapsible: true,\n        initialDepth: undefined,\n        zoomable: true,\n        zoom: 1,\n        scaleExtent: { min: 0.1, max: 1 },\n        nodeSize: { x: 140, y: 140 },\n        separation: { siblings: 1, nonSiblings: 2 },\n        shouldCollapseNeighborNodes: false,\n        svgClassName: '',\n        rootNodeClassName: '',\n        branchNodeClassName: '',\n        leafNodeClassName: '',\n        renderCustomNodeElement: undefined,\n        enableLegacyTransitions: false,\n        hasInteractiveNodes: false,\n        dimensions: undefined,\n        centeringTransitionDuration: 800,\n    };\n    return Tree;\n}(react_1.default.Component));\nexports.default = Tree;\n"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;MAAEC,SAAS,EAAE;IAAb,aAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;MAAED,CAAC,CAACI,SAAF,GAAcH,CAAd;IAAkB,CAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;MAAE,KAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IAAc,CAF9E;;IAGA,OAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;EACH,CALD;;EAMA,OAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;IACnBF,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;IACA,SAASO,EAAT,GAAc;MAAE,KAAKC,WAAL,GAAmBT,CAAnB;IAAuB;;IACvCA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;EACH,CAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;EAClDA,QAAQ,GAAGV,MAAM,CAACW,MAAP,IAAiB,UAASC,CAAT,EAAY;IACpC,KAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;MACA,KAAK,IAAIV,CAAT,IAAcS,CAAd,EAAiB,IAAIb,MAAM,CAACQ,SAAP,CAAiBH,cAAjB,CAAgCa,IAAhC,CAAqCL,CAArC,EAAwCT,CAAxC,CAAJ,EACbQ,CAAC,CAACR,CAAD,CAAD,GAAOS,CAAC,CAACT,CAAD,CAAR;IACP;;IACD,OAAOQ,CAAP;EACH,CAPD;;EAQA,OAAOF,QAAQ,CAACS,KAAT,CAAe,IAAf,EAAqBH,SAArB,CAAP;AACH,CAVD;;AAWA,IAAII,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGArB,MAAM,CAACuB,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGN,eAAe,CAACO,OAAO,CAAC,OAAD,CAAR,CAA7B;;AACA,IAAIC,cAAc,GAAGD,OAAO,CAAC,cAAD,CAA5B;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,cAAD,CAA5B;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,aAAD,CAApB;;AACA,IAAIK,OAAO,GAAGZ,eAAe,CAACO,OAAO,CAAC,OAAD,CAAR,CAA7B;;AACA,IAAIM,MAAM,GAAGN,OAAO,CAAC,MAAD,CAApB;;AACA,IAAIO,wBAAwB,GAAGd,eAAe,CAACO,OAAO,CAAC,0BAAD,CAAR,CAA9C;;AACA,IAAIQ,MAAM,GAAGf,eAAe,CAACO,OAAO,CAAC,SAAD,CAAR,CAA5B;;AACA,IAAIS,MAAM,GAAGhB,eAAe,CAACO,OAAO,CAAC,SAAD,CAAR,CAA5B;;AACA,IAAIU,WAAW,GAAGjB,eAAe,CAACO,OAAO,CAAC,cAAD,CAAR,CAAjC;;AACA,IAAIW,IAAI;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACxC3C,SAAS,CAAC0C,IAAD,EAAOC,MAAP,CAAT;;EACA,SAASD,IAAT,GAAgB;IACZ,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACpB,KAAP,CAAa,IAAb,EAAmBH,SAAnB,CAAnB,IAAoD,IAAhE;;IACAwB,KAAK,CAACC,KAAN,GAAc;MACVC,OAAO,EAAEF,KAAK,CAACG,KAAN,CAAYC,IADX;MAEVA,IAAI,EAAEN,IAAI,CAACO,wBAAL,CAA8Bb,OAAO,CAACc,OAAR,CAAgBN,KAAK,CAACG,KAAN,CAAYC,IAA5B,CAA9B,CAFI;MAGVG,EAAE,EAAET,IAAI,CAACU,mBAAL,CAAyBR,KAAK,CAACG,KAA/B,CAHM;MAIVM,eAAe,EAAE,KAJP;MAKVC,yBAAyB,EAAE;IALjB,CAAd;IAOAV,KAAK,CAACW,aAAN,GAAsB;MAClBC,UAAU,EAAE,IADM;MAElBH,eAAe,EAAE;IAFC,CAAtB;IAIAT,KAAK,CAACa,cAAN,GAAuB,cAAcpB,MAAM,CAACqB,EAAP,EAArC;IACAd,KAAK,CAACe,YAAN,GAAqB,YAAYtB,MAAM,CAACqB,EAAP,EAAjC;IACA;AACR;AACA;AACA;AACA;AACA;AACA;;IACQd,KAAK,CAACgB,gBAAN,GAAyB,UAAUC,MAAV,EAAkB;MACvC,IAAIb,IAAI,GAAGZ,OAAO,CAACc,OAAR,CAAgBN,KAAK,CAACC,KAAN,CAAYG,IAA5B,CAAX;;MACA,IAAIc,OAAO,GAAGlB,KAAK,CAACmB,aAAN,CAAoBF,MAApB,EAA4Bb,IAA5B,EAAkC,EAAlC,CAAd;;MACA,IAAIgB,eAAe,GAAGF,OAAO,CAAC,CAAD,CAA7B;;MACA,IAAIlB,KAAK,CAACG,KAAN,CAAYkB,WAAZ,IAA2B,CAACrB,KAAK,CAACC,KAAN,CAAYQ,eAA5C,EAA6D;QACzD,IAAIW,eAAe,CAACE,MAAhB,CAAuBC,SAA3B,EAAsC;UAClCzB,IAAI,CAAC0B,UAAL,CAAgBJ,eAAhB;UACApB,KAAK,CAACG,KAAN,CAAYsB,2BAAZ,IAA2CzB,KAAK,CAAC0B,qBAAN,CAA4BN,eAA5B,EAA6ChB,IAA7C,CAA3C;QACH,CAHD,MAIK;UACDN,IAAI,CAAC6B,YAAL,CAAkBP,eAAlB;QACH;;QACD,IAAIpB,KAAK,CAACG,KAAN,CAAYyB,uBAAhB,EAAyC;UACrC;UACA5B,KAAK,CAAC6B,QAAN,CAAe;YAAEzB,IAAI,EAAEA,IAAR;YAAcK,eAAe,EAAE;UAA/B,CAAf,EAFqC,CAGrC;;;UACAqB,UAAU,CAAC,YAAY;YAAE,OAAO9B,KAAK,CAAC6B,QAAN,CAAe;cAAEpB,eAAe,EAAE;YAAnB,CAAf,CAAP;UAAoD,CAAnE,EAAqET,KAAK,CAACG,KAAN,CAAY4B,kBAAZ,GAAiC,EAAtG,CAAV;QACH,CALD,MAMK;UACD/B,KAAK,CAAC6B,QAAN,CAAe;YAAEzB,IAAI,EAAEA;UAAR,CAAf;QACH;;QACDJ,KAAK,CAACW,aAAN,CAAoBC,UAApB,GAAiCQ,eAAjC;MACH;IACJ,CAvBD;IAwBA;AACR;AACA;;;IACQpB,KAAK,CAACgC,mBAAN,GAA4B,UAAUC,kBAAV,EAA8BC,GAA9B,EAAmC;MAC3D,IAAIC,WAAW,GAAGnC,KAAK,CAACG,KAAN,CAAYgC,WAA9B;;MACA,IAAIA,WAAW,IAAI,OAAOA,WAAP,KAAuB,UAA1C,EAAsD;QAClD;QACAD,GAAG,CAACE,OAAJ;QACAD,WAAW,CAAC3C,OAAO,CAACc,OAAR,CAAgB2B,kBAAhB,CAAD,EAAsCC,GAAtC,CAAX;MACH;IACJ,CAPD;IAQA;AACR;AACA;;;IACQlC,KAAK,CAACqC,mBAAN,GAA4B,UAAUC,UAAV,EAAsBC,UAAtB,EAAkCL,GAAlC,EAAuC;MAC/D,IAAIM,WAAW,GAAGxC,KAAK,CAACG,KAAN,CAAYqC,WAA9B;;MACA,IAAIA,WAAW,IAAI,OAAOA,WAAP,KAAuB,UAA1C,EAAsD;QAClD;QACAN,GAAG,CAACE,OAAJ;QACAI,WAAW,CAAChD,OAAO,CAACc,OAAR,CAAgBgC,UAAhB,CAAD,EAA8B9C,OAAO,CAACc,OAAR,CAAgBiC,UAAhB,CAA9B,EAA2DL,GAA3D,CAAX;MACH;IACJ,CAPD;IAQA;AACR;AACA;;;IACQlC,KAAK,CAACyC,uBAAN,GAAgC,UAAUR,kBAAV,EAA8BC,GAA9B,EAAmC;MAC/D,IAAIQ,eAAe,GAAG1C,KAAK,CAACG,KAAN,CAAYuC,eAAlC;;MACA,IAAIA,eAAe,IAAI,OAAOA,eAAP,KAA2B,UAAlD,EAA8D;QAC1D;QACAR,GAAG,CAACE,OAAJ;QACAM,eAAe,CAAClD,OAAO,CAACc,OAAR,CAAgB2B,kBAAhB,CAAD,EAAsCC,GAAtC,CAAf;MACH;IACJ,CAPD;IAQA;AACR;AACA;;;IACQlC,KAAK,CAAC2C,uBAAN,GAAgC,UAAUL,UAAV,EAAsBC,UAAtB,EAAkCL,GAAlC,EAAuC;MACnE,IAAIU,eAAe,GAAG5C,KAAK,CAACG,KAAN,CAAYyC,eAAlC;;MACA,IAAIA,eAAe,IAAI,OAAOA,eAAP,KAA2B,UAAlD,EAA8D;QAC1D;QACAV,GAAG,CAACE,OAAJ;QACAQ,eAAe,CAACpD,OAAO,CAACc,OAAR,CAAgBgC,UAAhB,CAAD,EAA8B9C,OAAO,CAACc,OAAR,CAAgBiC,UAAhB,CAA9B,EAA2DL,GAA3D,CAAf;MACH;IACJ,CAPD;IAQA;AACR;AACA;;;IACQlC,KAAK,CAAC6C,sBAAN,GAA+B,UAAUZ,kBAAV,EAA8BC,GAA9B,EAAmC;MAC9D,IAAIY,cAAc,GAAG9C,KAAK,CAACG,KAAN,CAAY2C,cAAjC;;MACA,IAAIA,cAAc,IAAI,OAAOA,cAAP,KAA0B,UAAhD,EAA4D;QACxD;QACAZ,GAAG,CAACE,OAAJ;QACAU,cAAc,CAACtD,OAAO,CAACc,OAAR,CAAgB2B,kBAAhB,CAAD,EAAsCC,GAAtC,CAAd;MACH;IACJ,CAPD;IAQA;AACR;AACA;;;IACQlC,KAAK,CAAC+C,sBAAN,GAA+B,UAAUT,UAAV,EAAsBC,UAAtB,EAAkCL,GAAlC,EAAuC;MAClE,IAAIc,cAAc,GAAGhD,KAAK,CAACG,KAAN,CAAY6C,cAAjC;;MACA,IAAIA,cAAc,IAAI,OAAOA,cAAP,KAA0B,UAAhD,EAA4D;QACxD;QACAd,GAAG,CAACE,OAAJ;QACAY,cAAc,CAACxD,OAAO,CAACc,OAAR,CAAgBgC,UAAhB,CAAD,EAA8B9C,OAAO,CAACc,OAAR,CAAgBiC,UAAhB,CAA9B,EAA2DL,GAA3D,CAAd;MACH;IACJ,CAPD;IAQA;AACR;AACA;AACA;AACA;AACA;AACA;;;IACQlC,KAAK,CAACiD,UAAN,GAAmB,UAAUhB,kBAAV,EAA8B;MAC7C,IAAIiB,EAAE,GAAGlD,KAAK,CAACG,KAAf;MAAA,IAAsBgD,UAAU,GAAGD,EAAE,CAACC,UAAtC;MAAA,IAAkDC,WAAW,GAAGF,EAAE,CAACE,WAAnE;MAAA,IAAgFC,IAAI,GAAGH,EAAE,CAACG,IAA1F;MAAA,IAAgGC,2BAA2B,GAAGJ,EAAE,CAACI,2BAAjI;;MACA,IAAIH,UAAJ,EAAgB;QACZ,IAAII,CAAC,GAAGlE,cAAc,CAACmE,MAAf,CAAsB,MAAMxD,KAAK,CAACe,YAAlC,CAAR;QACA,IAAI0C,GAAG,GAAGpE,cAAc,CAACmE,MAAf,CAAsB,MAAMxD,KAAK,CAACa,cAAlC,CAAV;QACA,IAAI6C,KAAK,GAAG1D,KAAK,CAACC,KAAN,CAAYM,EAAZ,CAAemD,KAA3B;QACA,IAAIC,CAAC,GAAG,KAAK,CAAb;QACA,IAAIC,CAAC,GAAG,KAAK,CAAb,CALY,CAMZ;;QACA,IAAIR,WAAW,KAAK,YAApB,EAAkC;UAC9BQ,CAAC,GAAG,CAAC3B,kBAAkB,CAAC0B,CAApB,GAAwBD,KAAxB,GAAgCP,UAAU,CAACU,MAAX,GAAoB,CAAxD;UACAF,CAAC,GAAG,CAAC1B,kBAAkB,CAAC2B,CAApB,GAAwBF,KAAxB,GAAgCP,UAAU,CAACW,KAAX,GAAmB,CAAvD;QACH,CAHD,MAIK;UACD;UACAH,CAAC,GAAG,CAAC1B,kBAAkB,CAAC0B,CAApB,GAAwBD,KAAxB,GAAgCP,UAAU,CAACW,KAAX,GAAmB,CAAvD;UACAF,CAAC,GAAG,CAAC3B,kBAAkB,CAAC2B,CAApB,GAAwBF,KAAxB,GAAgCP,UAAU,CAACU,MAAX,GAAoB,CAAxD;QACH,CAfW,CAgBZ;;;QACAN,CAAC,CAACQ,UAAF,GACKC,QADL,CACcV,2BADd,EAEKW,IAFL,CAEU,WAFV,EAEuB,eAAeN,CAAf,GAAmB,GAAnB,GAAyBC,CAAzB,GAA6B,SAA7B,GAAyCF,KAAzC,GAAiD,GAFxE,EAjBY,CAoBZ;QACA;QACA;;QACAD,GAAG,CAAC/E,IAAJ,CAASY,SAAS,CAAC+D,IAAV,GAAiBa,SAA1B,EAAqC5E,SAAS,CAAC6E,YAAV,CAAuBC,SAAvB,CAAiCT,CAAjC,EAAoCC,CAApC,EAAuCF,KAAvC,CAA6CL,IAA7C,CAArC;MACH;IACJ,CA3BD;IA4BA;AACR;AACA;;;IACQrD,KAAK,CAACqE,gBAAN,GAAyB,UAAUC,MAAV,EAAkBC,SAAlB,EAA6B;MAClD,IAAIrB,EAAE,GAAGlD,KAAK,CAACG,KAAf;MAAA,IAAsBqE,iBAAiB,GAAGtB,EAAE,CAACsB,iBAA7C;MAAA,IAAgEC,mBAAmB,GAAGvB,EAAE,CAACuB,mBAAzF;MAAA,IAA8GC,iBAAiB,GAAGxB,EAAE,CAACwB,iBAArI;MACA,IAAIC,SAAS,GAAGL,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKM,SAA9C;;MACA,IAAID,SAAJ,EAAe;QACX,OAAOJ,SAAS,CAACM,QAAV,GAAqBJ,mBAArB,GAA2CC,iBAAlD;MACH,CAFD,MAGK;QACD,OAAOF,iBAAP;MACH;IACJ,CATD;;IAUA,OAAOxE,KAAP;EACH;;EACDF,IAAI,CAACgF,wBAAL,GAAgC,UAAUC,SAAV,EAAqBC,SAArB,EAAgC;IAC5D,IAAIC,YAAY,GAAG,IAAnB,CAD4D,CAE5D;;IACA,IAAIF,SAAS,CAAC3E,IAAV,KAAmB4E,SAAS,CAAC9E,OAAjC,EAA0C;MACtC+E,YAAY,GAAG;QACX/E,OAAO,EAAE6E,SAAS,CAAC3E,IADR;QAEXA,IAAI,EAAEN,IAAI,CAACO,wBAAL,CAA8Bb,OAAO,CAACc,OAAR,CAAgByE,SAAS,CAAC3E,IAA1B,CAA9B,CAFK;QAGXM,yBAAyB,EAAE;MAHhB,CAAf;IAKH;;IACD,IAAIH,EAAE,GAAGT,IAAI,CAACU,mBAAL,CAAyBuE,SAAzB,CAAT;;IACA,IAAI,CAACxF,MAAM,CAAC2F,MAAP,CAAc3E,EAAd,EAAkByE,SAAS,CAACzE,EAA5B,CAAL,EAAsC;MAClC0E,YAAY,GAAGA,YAAY,IAAI,EAA/B;MACAA,YAAY,CAAC1E,EAAb,GAAkBA,EAAlB;IACH;;IACD,OAAO0E,YAAP;EACH,CAhBD;;EAiBAnF,IAAI,CAAC9B,SAAL,CAAemH,iBAAf,GAAmC,YAAY;IAC3C,KAAKC,gBAAL,CAAsB,KAAKjF,KAA3B;IACA,KAAK0B,QAAL,CAAc;MAAEnB,yBAAyB,EAAE;IAA7B,CAAd;EACH,CAHD;;EAIAZ,IAAI,CAAC9B,SAAL,CAAeqH,kBAAf,GAAoC,UAAUC,SAAV,EAAqB;IACrD,IAAI,KAAKnF,KAAL,CAAWC,IAAX,KAAoBkF,SAAS,CAAClF,IAAlC,EAAwC;MACpC;MACA,KAAKyB,QAAL,CAAc;QAAEnB,yBAAyB,EAAE;MAA7B,CAAd;IACH;;IACD,IAAI,CAACnB,MAAM,CAAC2F,MAAP,CAAc,KAAK/E,KAAL,CAAWiE,SAAzB,EAAoCkB,SAAS,CAAClB,SAA9C,CAAD,IACA,CAAC7E,MAAM,CAAC2F,MAAP,CAAc,KAAK/E,KAAL,CAAWoF,WAAzB,EAAsCD,SAAS,CAACC,WAAhD,CADD,IAEA,KAAKpF,KAAL,CAAWqF,QAAX,KAAwBF,SAAS,CAACE,QAFlC,IAGA,KAAKrF,KAAL,CAAWkD,IAAX,KAAoBiC,SAAS,CAACjC,IAH9B,IAIA,KAAKlD,KAAL,CAAWyB,uBAAX,KAAuC0D,SAAS,CAAC1D,uBAJrD,EAI8E;MAC1E;MACA;MACA,KAAKwD,gBAAL,CAAsB,KAAKjF,KAA3B;IACH;;IACD,IAAI,OAAO,KAAKA,KAAL,CAAWsF,QAAlB,KAA+B,UAAnC,EAA+C;MAC3C,KAAKtF,KAAL,CAAWsF,QAAX,CAAoB;QAChBC,IAAI,EAAE,KAAK/E,aAAL,CAAmBC,UAAnB,GAAgCpB,OAAO,CAACc,OAAR,CAAgB,KAAKK,aAAL,CAAmBC,UAAnC,CAAhC,GAAiF,IADvE;QAEhByC,IAAI,EAAE,KAAKpD,KAAL,CAAWM,EAAX,CAAcmD,KAFJ;QAGhBU,SAAS,EAAE,KAAKnE,KAAL,CAAWM,EAAX,CAAc6D;MAHT,CAApB;IAKH,CApBoD,CAqBrD;;;IACA,KAAKzD,aAAL,CAAmBC,UAAnB,GAAgC,IAAhC;EACH,CAvBD;EAwBA;AACJ;AACA;AACA;AACA;AACA;;;EACId,IAAI,CAAC9B,SAAL,CAAe2H,mBAAf,GAAqC,UAAUC,OAAV,EAAmBC,YAAnB,EAAiC;IAClED,OAAO,CAACE,OAAR,CAAgB,UAAUvH,CAAV,EAAa;MACzBA,CAAC,CAAC6B,IAAF,CAAOkB,MAAP,CAAcC,SAAd,GAA0BhD,CAAC,CAACwH,KAAF,IAAWF,YAArC;IACH,CAFD;EAGH,CAJD;EAKA;AACJ;AACA;AACA;AACA;;;EACI/F,IAAI,CAAC9B,SAAL,CAAeoH,gBAAf,GAAkC,UAAUjF,KAAV,EAAiB;IAC/C,IAAIH,KAAK,GAAG,IAAZ;;IACA,IAAIwF,QAAQ,GAAGrF,KAAK,CAACqF,QAArB;IAAA,IAA+BD,WAAW,GAAGpF,KAAK,CAACoF,WAAnD;IAAA,IAAgEnB,SAAS,GAAGjE,KAAK,CAACiE,SAAlF;IAAA,IAA6Ff,IAAI,GAAGlD,KAAK,CAACkD,IAA1G;IAAA,IAAgHoC,QAAQ,GAAGtF,KAAK,CAACsF,QAAjI;IAAA,IAA2IO,mBAAmB,GAAG7F,KAAK,CAAC6F,mBAAvK;IACA,IAAIvC,GAAG,GAAGpE,cAAc,CAACmE,MAAf,CAAsB,MAAM,KAAK3C,cAAjC,CAAV;IACA,IAAI0C,CAAC,GAAGlE,cAAc,CAACmE,MAAf,CAAsB,MAAM,KAAKzC,YAAjC,CAAR,CAJ+C,CAK/C;IACA;;IACA0C,GAAG,CAAC/E,IAAJ,CAASY,SAAS,CAAC+D,IAAV,GAAiBa,SAA1B,EAAqC5E,SAAS,CAAC6E,YAAV,CAAuBC,SAAvB,CAAiCA,SAAS,CAACT,CAA3C,EAA8CS,SAAS,CAACR,CAAxD,EAA2DF,KAA3D,CAAiEL,IAAjE,CAArC;IACAI,GAAG,CAAC/E,IAAJ,CAASY,SAAS,CAAC+D,IAAV,GACJkC,WADI,CACQC,QAAQ,GAAG,CAACD,WAAW,CAACU,GAAb,EAAkBV,WAAW,CAACW,GAA9B,CAAH,GAAwC,CAAC7C,IAAD,EAAOA,IAAP,CADxD,EAEL;IAFK,CAGJ8C,MAHI,CAGG,YAAY;MACpB,IAAIH,mBAAJ,EACI,OAAQ3G,cAAc,CAAC+G,KAAf,CAAqBC,MAArB,CAA4BC,SAA5B,CAAsCC,QAAtC,CAA+CvG,KAAK,CAACa,cAArD,KACJxB,cAAc,CAAC+G,KAAf,CAAqBC,MAArB,CAA4BC,SAA5B,CAAsCC,QAAtC,CAA+CvG,KAAK,CAACe,YAArD,CADI,IAEJ1B,cAAc,CAAC+G,KAAf,CAAqBI,QAFzB;MAGJ,OAAO,IAAP;IACH,CATQ,EAUJC,EAVI,CAUD,MAVC,EAUO,YAAY;MACxBlD,CAAC,CAACU,IAAF,CAAO,WAAP,EAAoB5E,cAAc,CAAC+G,KAAf,CAAqBlC,SAAzC;;MACA,IAAI,OAAOuB,QAAP,KAAoB,UAAxB,EAAoC;QAChC;QACA;QACA;QACAA,QAAQ,CAAC;UACLC,IAAI,EAAE,IADD;UAELrC,IAAI,EAAEhE,cAAc,CAAC+G,KAAf,CAAqBlC,SAArB,CAA+BwC,CAFhC;UAGLtC,SAAS,EAAE;YAAET,CAAC,EAAEtE,cAAc,CAAC+G,KAAf,CAAqBlC,SAArB,CAA+BP,CAApC;YAAuCC,CAAC,EAAEvE,cAAc,CAAC+G,KAAf,CAAqBlC,SAArB,CAA+BN;UAAzE;QAHN,CAAD,CAAR,CAJgC,CAShC;;QACA5D,KAAK,CAACC,KAAN,CAAYM,EAAZ,CAAemD,KAAf,GAAuBrE,cAAc,CAAC+G,KAAf,CAAqBlC,SAArB,CAA+BwC,CAAtD;QACA1G,KAAK,CAACC,KAAN,CAAYM,EAAZ,CAAe6D,SAAf,GAA2B;UACvBT,CAAC,EAAEtE,cAAc,CAAC+G,KAAf,CAAqBlC,SAArB,CAA+BP,CADX;UAEvBC,CAAC,EAAEvE,cAAc,CAAC+G,KAAf,CAAqBlC,SAArB,CAA+BN;QAFX,CAA3B;MAIH;IACJ,CA5BQ,CAAT;EA6BH,CArCD;EAsCA;AACJ;AACA;AACA;AACA;AACA;;;EACI9D,IAAI,CAACO,wBAAL,GAAgC,UAAUD,IAAV,EAAgBuG,YAAhB,EAA8B;IAC1D,IAAIA,YAAY,KAAK,KAAK,CAA1B,EAA6B;MAAEA,YAAY,GAAG,CAAf;IAAmB,CADQ,CAE1D;;;IACA,IAAIrJ,CAAC,GAAGK,KAAK,CAACiJ,OAAN,CAAcxG,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAArC;IACA,OAAO9C,CAAC,CAACuJ,GAAF,CAAM,UAAUtI,CAAV,EAAa;MACtB,IAAIgG,SAAS,GAAGhG,CAAhB;MACAgG,SAAS,CAACjD,MAAV,GAAmB;QAAEwF,EAAE,EAAE,IAAN;QAAYf,KAAK,EAAE,IAAnB;QAAyBxE,SAAS,EAAE;MAApC,CAAnB;MACAgD,SAAS,CAACjD,MAAV,CAAiBwF,EAAjB,GAAsBrH,MAAM,CAACqB,EAAP,EAAtB,CAHsB,CAItB;MACA;MACA;;MACAyD,SAAS,CAACjD,MAAV,CAAiByE,KAAjB,GAAyBY,YAAzB,CAPsB,CAQtB;;MACA,IAAIpC,SAAS,CAACM,QAAV,IAAsBN,SAAS,CAACM,QAAV,CAAmBpG,MAAnB,GAA4B,CAAtD,EAAyD;QACrD8F,SAAS,CAACM,QAAV,GAAqB/E,IAAI,CAACO,wBAAL,CAA8BkE,SAAS,CAACM,QAAxC,EAAkD8B,YAAY,GAAG,CAAjE,CAArB;MACH;;MACD,OAAOpC,SAAP;IACH,CAbM,CAAP;EAcH,CAlBD;EAmBA;AACJ;AACA;;;EACIzE,IAAI,CAAC9B,SAAL,CAAemD,aAAf,GAA+B,UAAUF,MAAV,EAAkB2E,OAAlB,EAA2BmB,IAA3B,EAAiC;IAC5D,IAAI/G,KAAK,GAAG,IAAZ;;IACA,IAAI+G,IAAI,CAACtI,MAAL,GAAc,CAAlB,EAAqB;MACjB,OAAOsI,IAAP;IACH;;IACDA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAYpB,OAAO,CAACO,MAAR,CAAe,UAAUT,IAAV,EAAgB;MAAE,OAAOA,IAAI,CAACpE,MAAL,CAAYwF,EAAZ,KAAmB7F,MAA1B;IAAmC,CAApE,CAAZ,CAAP;IACA2E,OAAO,CAACE,OAAR,CAAgB,UAAUJ,IAAV,EAAgB;MAC5B,IAAIA,IAAI,CAACb,QAAL,IAAiBa,IAAI,CAACb,QAAL,CAAcpG,MAAd,GAAuB,CAA5C,EAA+C;QAC3CsI,IAAI,GAAG/G,KAAK,CAACmB,aAAN,CAAoBF,MAApB,EAA4ByE,IAAI,CAACb,QAAjC,EAA2CkC,IAA3C,CAAP;MACH;IACJ,CAJD;IAKA,OAAOA,IAAP;EACH,CAZD;EAaA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIjH,IAAI,CAAC9B,SAAL,CAAeiJ,gBAAf,GAAkC,UAAUlB,KAAV,EAAiBH,OAAjB,EAA0BsB,WAA1B,EAAuC;IACrE,IAAIlH,KAAK,GAAG,IAAZ;;IACAkH,WAAW,GAAGA,WAAW,CAACF,MAAZ,CAAmBpB,OAAO,CAACO,MAAR,CAAe,UAAUT,IAAV,EAAgB;MAAE,OAAOA,IAAI,CAACpE,MAAL,CAAYyE,KAAZ,KAAsBA,KAA7B;IAAqC,CAAtE,CAAnB,CAAd;IACAH,OAAO,CAACE,OAAR,CAAgB,UAAUJ,IAAV,EAAgB;MAC5B,IAAIA,IAAI,CAACb,QAAL,IAAiBa,IAAI,CAACb,QAAL,CAAcpG,MAAd,GAAuB,CAA5C,EAA+C;QAC3CyI,WAAW,GAAGlH,KAAK,CAACiH,gBAAN,CAAuBlB,KAAvB,EAA8BL,IAAI,CAACb,QAAnC,EAA6CqC,WAA7C,CAAd;MACH;IACJ,CAJD;IAKA,OAAOA,WAAP;EACH,CATD;EAUA;AACJ;AACA;AACA;AACA;AACA;;;EACIpH,IAAI,CAAC6B,YAAL,GAAoB,UAAU4C,SAAV,EAAqB;IACrCA,SAAS,CAACjD,MAAV,CAAiBC,SAAjB,GAA6B,IAA7B;;IACA,IAAIgD,SAAS,CAACM,QAAV,IAAsBN,SAAS,CAACM,QAAV,CAAmBpG,MAAnB,GAA4B,CAAtD,EAAyD;MACrD8F,SAAS,CAACM,QAAV,CAAmBiB,OAAnB,CAA2B,UAAUqB,KAAV,EAAiB;QACxCrH,IAAI,CAAC6B,YAAL,CAAkBwF,KAAlB;MACH,CAFD;IAGH;EACJ,CAPD;EAQA;AACJ;AACA;AACA;AACA;AACA;;;EACIrH,IAAI,CAAC0B,UAAL,GAAkB,UAAU+C,SAAV,EAAqB;IACnCA,SAAS,CAACjD,MAAV,CAAiBC,SAAjB,GAA6B,KAA7B;EACH,CAFD;EAGA;AACJ;AACA;;;EACIzB,IAAI,CAAC9B,SAAL,CAAe0D,qBAAf,GAAuC,UAAUd,UAAV,EAAsBgF,OAAtB,EAA+B;IAClE,IAAIwB,SAAS,GAAG,KAAKH,gBAAL,CAAsBrG,UAAU,CAACU,MAAX,CAAkByE,KAAxC,EAA+CH,OAA/C,EAAwD,EAAxD,EAA4DO,MAA5D,CAAmE,UAAUT,IAAV,EAAgB;MAAE,OAAOA,IAAI,CAACpE,MAAL,CAAYwF,EAAZ,KAAmBlG,UAAU,CAACU,MAAX,CAAkBwF,EAA5C;IAAiD,CAAtI,CAAhB;IACAM,SAAS,CAACtB,OAAV,CAAkB,UAAUuB,QAAV,EAAoB;MAAE,OAAOvH,IAAI,CAAC6B,YAAL,CAAkB0F,QAAlB,CAAP;IAAqC,CAA7E;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIvH,IAAI,CAAC9B,SAAL,CAAesJ,YAAf,GAA8B,YAAY;IACtC,IAAIpE,EAAE,GAAG,KAAK/C,KAAd;IAAA,IAAqB0F,YAAY,GAAG3C,EAAE,CAAC2C,YAAvC;IAAA,IAAqD0B,WAAW,GAAGrE,EAAE,CAACqE,WAAtE;IAAA,IAAmFC,UAAU,GAAGtE,EAAE,CAACsE,UAAnG;IAAA,IAA+GC,QAAQ,GAAGvE,EAAE,CAACuE,QAA7H;IAAA,IAAuIrE,WAAW,GAAGF,EAAE,CAACE,WAAxJ;IACA,IAAI1C,yBAAyB,GAAG,KAAKT,KAAL,CAAWS,yBAA3C;IACA,IAAIgH,IAAI,GAAGtI,cAAc,CAACsI,IAAf,GACND,QADM,CACGrE,WAAW,KAAK,YAAhB,GAA+B,CAACqE,QAAQ,CAAC7D,CAAV,EAAa6D,QAAQ,CAAC9D,CAAtB,CAA/B,GAA0D,CAAC8D,QAAQ,CAAC9D,CAAV,EAAa8D,QAAQ,CAAC7D,CAAtB,CAD7D,EAEN4D,UAFM,CAEK,UAAUG,CAAV,EAAapK,CAAb,EAAgB;MAC5B,OAAOoK,CAAC,CAACrD,MAAF,CAASlE,IAAT,CAAckB,MAAd,CAAqBwF,EAArB,KAA4BvJ,CAAC,CAAC+G,MAAF,CAASlE,IAAT,CAAckB,MAAd,CAAqBwF,EAAjD,GACDU,UAAU,CAACI,QADV,GAEDJ,UAAU,CAACK,WAFjB;IAGH,CANU,CAAX;IAOA,IAAIC,QAAQ,GAAGJ,IAAI,CAACtI,cAAc,CAAC2I,SAAf,CAAyB,KAAK9H,KAAL,CAAWG,IAAX,CAAgB,CAAhB,CAAzB,EAA6C,UAAU9C,CAAV,EAAa;MAAE,OAAQA,CAAC,CAACgE,MAAF,CAASC,SAAT,GAAqB,IAArB,GAA4BjE,CAAC,CAACuH,QAAtC;IAAkD,CAA9G,CAAD,CAAnB;IACA,IAAImD,KAAK,GAAGF,QAAQ,CAACG,WAAT,EAAZ;IACA,IAAIC,KAAK,GAAGJ,QAAQ,CAACI,KAAT,EAAZ,CAZsC,CAatC;;IACA,IAAIrC,YAAY,KAAKjB,SAAjB,IAA8BlE,yBAAlC,EAA6D;MACzD,KAAKiF,mBAAL,CAAyBqC,KAAzB,EAAgCnC,YAAhC;IACH;;IACD,IAAI0B,WAAJ,EAAiB;MACbS,KAAK,CAAClC,OAAN,CAAc,UAAUJ,IAAV,EAAgB;QAC1BA,IAAI,CAAC9B,CAAL,GAAS8B,IAAI,CAACK,KAAL,GAAawB,WAAtB;MACH,CAFD;IAGH;;IACD,OAAO;MAAES,KAAK,EAAEA,KAAT;MAAgBE,KAAK,EAAEA;IAAvB,CAAP;EACH,CAvBD;EAwBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIpI,IAAI,CAACU,mBAAL,GAA2B,UAAUuE,SAAV,EAAqB;IAC5C,IAAIrB,KAAJ;;IACA,IAAIqB,SAAS,CAAC1B,IAAV,GAAiB0B,SAAS,CAACQ,WAAV,CAAsBW,GAA3C,EAAgD;MAC5CxC,KAAK,GAAGqB,SAAS,CAACQ,WAAV,CAAsBW,GAA9B;IACH,CAFD,MAGK,IAAInB,SAAS,CAAC1B,IAAV,GAAiB0B,SAAS,CAACQ,WAAV,CAAsBU,GAA3C,EAAgD;MACjDvC,KAAK,GAAGqB,SAAS,CAACQ,WAAV,CAAsBU,GAA9B;IACH,CAFI,MAGA;MACDvC,KAAK,GAAGqB,SAAS,CAAC1B,IAAlB;IACH;;IACD,OAAO;MACHe,SAAS,EAAEW,SAAS,CAACX,SADlB;MAEHV,KAAK,EAAEA;IAFJ,CAAP;EAIH,CAfD;;EAgBA5D,IAAI,CAAC9B,SAAL,CAAemK,MAAf,GAAwB,YAAY;IAChC,IAAInI,KAAK,GAAG,IAAZ;;IACA,IAAIkD,EAAE,GAAG,KAAKoE,YAAL,EAAT;IAAA,IAA8BU,KAAK,GAAG9E,EAAE,CAAC8E,KAAzC;IAAA,IAAgDE,KAAK,GAAGhF,EAAE,CAACgF,KAA3D;;IACA,IAAIE,EAAE,GAAG,KAAKjI,KAAd;IAAA,IAAqBkI,uBAAuB,GAAGD,EAAE,CAACC,uBAAlD;IAAA,IAA2EjF,WAAW,GAAGgF,EAAE,CAAChF,WAA5F;IAAA,IAAyGkF,QAAQ,GAAGF,EAAE,CAACE,QAAvH;IAAA,IAAiIvG,kBAAkB,GAAGqG,EAAE,CAACrG,kBAAzJ;IAAA,IAA6K0F,QAAQ,GAAGW,EAAE,CAACX,QAA3L;IAAA,IAAqMF,WAAW,GAAGa,EAAE,CAACb,WAAtN;IAAA,IAAmO1B,YAAY,GAAGuC,EAAE,CAACvC,YAArP;IAAA,IAAmQ2B,UAAU,GAAGY,EAAE,CAACZ,UAAnR;IAAA,IAA+R5F,uBAAuB,GAAGwG,EAAE,CAACxG,uBAA5T;IAAA,IAAqV2G,YAAY,GAAGH,EAAE,CAACG,YAAvW;IAAA,IAAqXC,aAAa,GAAGJ,EAAE,CAACI,aAAxY;IACA,IAAIC,EAAE,GAAG,KAAKxI,KAAL,CAAWM,EAApB;IAAA,IAAwB6D,SAAS,GAAGqE,EAAE,CAACrE,SAAvC;IAAA,IAAkDV,KAAK,GAAG+E,EAAE,CAAC/E,KAA7D;;IACA,IAAIgF,aAAa,GAAGxK,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKuJ,QAAL,CAAT,EAAyBD,UAAzB,CAAT,EAA+C;MAAED,WAAW,EAAEA,WAAf;MACvE1B,YAAY,EAAEA;IADyD,CAA/C,CAA5B;;IAEA,OAAQ3G,OAAO,CAACoB,OAAR,CAAgBqI,aAAhB,CAA8B,KAA9B,EAAqC;MAAEC,SAAS,EAAE;IAAb,CAArC,EACJ1J,OAAO,CAACoB,OAAR,CAAgBqI,aAAhB,CAA8B,OAA9B,EAAuC,IAAvC,EAA6C9I,WAAW,CAACS,OAAzD,CADI,EAEJpB,OAAO,CAACoB,OAAR,CAAgBqI,aAAhB,CAA8B,KAA9B,EAAqC;MAAEC,SAAS,EAAE,cAAc,KAAK/H,cAAnB,GAAoC,GAApC,GAA0C0H,YAAvD;MAAqEzE,KAAK,EAAE,MAA5E;MAAoFD,MAAM,EAAE;IAA5F,CAArC,EACI3E,OAAO,CAACoB,OAAR,CAAgBqI,aAAhB,CAA8BjJ,wBAAwB,CAACY,OAAvD,EAAgE;MAAEsB,uBAAuB,EAAEA,uBAA3B;MAAoDiH,SAAS,EAAE,GAA/D;MAAoED,SAAS,EAAE,YAAY,KAAK7H,YAAhG;MAA8GmD,SAAS,EAAE,eAAeE,SAAS,CAACT,CAAzB,GAA6B,GAA7B,GAAmCS,SAAS,CAACR,CAA7C,GAAiD,UAAjD,GAA8DF,KAA9D,GAAsE;IAA/L,CAAhE,EACIwE,KAAK,CAACrB,GAAN,CAAU,UAAUiC,QAAV,EAAoBxK,CAApB,EAAuB;MAC7B,OAAQY,OAAO,CAACoB,OAAR,CAAgBqI,aAAhB,CAA8B/I,MAAM,CAACU,OAArC,EAA8C;QAAEyI,GAAG,EAAE,UAAUzK,CAAjB;QAAoB8E,WAAW,EAAEA,WAAjC;QAA8CkF,QAAQ,EAAEA,QAAxD;QAAkEE,aAAa,EAAEA,aAAjF;QAAgGM,QAAQ,EAAEA,QAA1G;QAAoHE,OAAO,EAAEhJ,KAAK,CAACqC,mBAAnI;QAAwJ4G,WAAW,EAAEjJ,KAAK,CAAC2C,uBAA3K;QAAoMuG,UAAU,EAAElJ,KAAK,CAAC+C,sBAAtN;QAA8OnB,uBAAuB,EAAEA,uBAAvQ;QAAgSG,kBAAkB,EAAEA;MAApT,CAA9C,CAAR;IACH,CAFD,CADJ,EAIIiG,KAAK,CAACnB,GAAN,CAAU,UAAU5E,kBAAV,EAA8B3D,CAA9B,EAAiC;MACvC,IAAI8B,IAAI,GAAG6B,kBAAkB,CAAC7B,IAA9B;MAAA,IAAoCuD,CAAC,GAAG1B,kBAAkB,CAAC0B,CAA3D;MAAA,IAA8DC,CAAC,GAAG3B,kBAAkB,CAAC2B,CAArF;MAAA,IAAwFU,MAAM,GAAGrC,kBAAkB,CAACqC,MAApH;MACA,OAAQpF,OAAO,CAACoB,OAAR,CAAgBqI,aAAhB,CAA8BhJ,MAAM,CAACW,OAArC,EAA8C;QAAEyI,GAAG,EAAE,UAAUzK,CAAjB;QAAoB8B,IAAI,EAAEA,IAA1B;QAAgC+I,QAAQ,EAAE;UAAExF,CAAC,EAAEA,CAAL;UAAQC,CAAC,EAAEA;QAAX,CAA1C;QAA0D3B,kBAAkB,EAAEA,kBAA9E;QAAkGqC,MAAM,EAAEA,MAA1G;QAAkH8E,aAAa,EAAEpJ,KAAK,CAACqE,gBAAN,CAAuBC,MAAvB,EAA+BlE,IAA/B,CAAjI;QAAuKiI,uBAAuB,EAAEA,uBAAhM;QAAyNZ,QAAQ,EAAEA,QAAnO;QAA6OrE,WAAW,EAAEA,WAA1P;QAAuQxB,uBAAuB,EAAEA,uBAAhS;QAAyTG,kBAAkB,EAAEA,kBAA7U;QAAiWsH,YAAY,EAAErJ,KAAK,CAACgB,gBAArX;QAAuYmB,WAAW,EAAEnC,KAAK,CAACgC,mBAA1Z;QAA+aU,eAAe,EAAE1C,KAAK,CAACyC,uBAAtc;QAA+dK,cAAc,EAAE9C,KAAK,CAAC6C,sBAArf;QAA6gB6F,aAAa,EAAEA,aAA5hB;QAA2iBzF,UAAU,EAAEjD,KAAK,CAACiD;MAA7jB,CAA9C,CAAR;IACH,CAHD,CAJJ,CADJ,CAFI,CAAR;EAWH,CAlBD;;EAmBAnD,IAAI,CAACwJ,YAAL,GAAoB;IAChBnH,WAAW,EAAEyC,SADG;IAEhBlC,eAAe,EAAEkC,SAFD;IAGhB9B,cAAc,EAAE8B,SAHA;IAIhBpC,WAAW,EAAEoC,SAJG;IAKhBhC,eAAe,EAAEgC,SALD;IAMhB5B,cAAc,EAAE4B,SANA;IAOhBa,QAAQ,EAAEb,SAPM;IAQhBxB,WAAW,EAAE,YARG;IAShBgB,SAAS,EAAE;MAAET,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE;IAAX,CATK;IAUhB0E,QAAQ,EAAE,UAVM;IAWhBE,aAAa,EAAE5D,SAXC;IAYhB7C,kBAAkB,EAAE,GAZJ;IAahBwF,WAAW,EAAE3C,SAbG;IAchBvD,WAAW,EAAE,IAdG;IAehBwE,YAAY,EAAEjB,SAfE;IAgBhBY,QAAQ,EAAE,IAhBM;IAiBhBnC,IAAI,EAAE,CAjBU;IAkBhBkC,WAAW,EAAE;MAAEU,GAAG,EAAE,GAAP;MAAYC,GAAG,EAAE;IAAjB,CAlBG;IAmBhBuB,QAAQ,EAAE;MAAE9D,CAAC,EAAE,GAAL;MAAUC,CAAC,EAAE;IAAb,CAnBM;IAoBhB4D,UAAU,EAAE;MAAEI,QAAQ,EAAE,CAAZ;MAAeC,WAAW,EAAE;IAA5B,CApBI;IAqBhBpG,2BAA2B,EAAE,KArBb;IAsBhB8G,YAAY,EAAE,EAtBE;IAuBhB/D,iBAAiB,EAAE,EAvBH;IAwBhBC,mBAAmB,EAAE,EAxBL;IAyBhBC,iBAAiB,EAAE,EAzBH;IA0BhB2D,uBAAuB,EAAEzD,SA1BT;IA2BhBhD,uBAAuB,EAAE,KA3BT;IA4BhBoE,mBAAmB,EAAE,KA5BL;IA6BhB7C,UAAU,EAAEyB,SA7BI;IA8BhBtB,2BAA2B,EAAE;EA9Bb,CAApB;EAgCA,OAAOxD,IAAP;AACH,CAzcyB,CAycxBZ,OAAO,CAACoB,OAAR,CAAgBiJ,SAzcQ,CAA1B;;AA0cAvK,OAAO,CAACsB,OAAR,GAAkBR,IAAlB"},"metadata":{},"sourceType":"script"}